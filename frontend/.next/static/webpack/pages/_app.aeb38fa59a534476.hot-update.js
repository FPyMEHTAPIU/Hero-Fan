"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./pages/Windows/Auth.js":
/*!*******************************!*\
  !*** ./pages/Windows/Auth.js ***!
  \*******************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkToken: () => (/* binding */ checkToken),\n/* harmony export */   getToken: () => (/* binding */ getToken)\n/* harmony export */ });\nrequire('dotenv').config();\nconst url = \"http://localhost:3000/api\";\nconst getToken = ()=>{\n    if (true) {\n        return localStorage.getItem('token');\n    }\n    return null;\n};\nconst checkToken = async ()=>{\n    const token = getToken();\n    if (!token) {\n        console.log('Token not found');\n        return;\n    }\n    try {\n        const isTokenValid = await fetch(\"\".concat(url, \"/marv-user/check-token\"), {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': \"Bearer \".concat(token)\n            }\n        });\n        if (isTokenValid.status === 403) {\n            console.error('Invalid or expired token. Removing token...');\n            if (true) {\n                localStorage.removeItem('token');\n            }\n        }\n        if (isTokenValid.status === 200) {\n            return await isTokenValid.json();\n        }\n    } catch (error) {\n        console.error('Error during token validation:', error);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = __webpack_module__.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = __webpack_module__.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, __webpack_module__.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                __webpack_module__.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                __webpack_module__.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        __webpack_module__.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    __webpack_module__.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9XaW5kb3dzL0F1dGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQUEsUUFBUSxVQUFVQyxNQUFNO0FBRXhCLE1BQU1DLE1BQU1DLDJCQUErQjtBQUVwQyxNQUFNRyxXQUFXO0lBQ3BCLElBQUksSUFBNkIsRUFBRTtRQUMvQixPQUFPQyxhQUFhQyxPQUFPLENBQUM7SUFDaEM7SUFDQSxPQUFPO0FBQ1gsRUFBRTtBQUVLLE1BQU1DLGFBQWE7SUFDdEIsTUFBTUMsUUFBUUo7SUFFZCxJQUFJLENBQUNJLE9BQU87UUFDUkMsUUFBUUMsR0FBRyxDQUFDO1FBQ1o7SUFDSjtJQUVBLElBQUk7UUFDQSxNQUFNQyxlQUFlLE1BQU1DLE1BQU0sR0FBTyxPQUFKWixLQUFJLDJCQUF5QjtZQUM3RGEsUUFBUTtZQUNSQyxTQUFTO2dCQUNMLGdCQUFnQjtnQkFDaEIsaUJBQWlCLFVBQWdCLE9BQU5OO1lBQy9CO1FBQ0o7UUFFQSxJQUFJRyxhQUFhSSxNQUFNLEtBQUssS0FBSztZQUM3Qk4sUUFBUU8sS0FBSyxDQUFDO1lBQ2QsSUFBSSxJQUE2QixFQUFFO2dCQUMvQlgsYUFBYVksVUFBVSxDQUFDO1lBQzVCO1FBQ0o7UUFFQSxJQUFJTixhQUFhSSxNQUFNLEtBQUssS0FBSztZQUM3QixPQUFPLE1BQU1KLGFBQWFPLElBQUk7UUFDbEM7SUFDSixFQUFFLE9BQU9GLE9BQU87UUFDWlAsUUFBUU8sS0FBSyxDQUFDLGtDQUFrQ0E7SUFDcEQ7QUFDSixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcGFnZXMvV2luZG93cy9BdXRoLmpzPzdmMGYiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7XHJcblxyXG5jb25zdCB1cmwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfVVJMO1xyXG5cclxuZXhwb3J0IGNvbnN0IGdldFRva2VuID0gKCkgPT4ge1xyXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgcmV0dXJuIGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY2hlY2tUb2tlbiA9IGFzeW5jICgpID0+IHtcclxuICAgIGNvbnN0IHRva2VuID0gZ2V0VG9rZW4oKTtcclxuXHJcbiAgICBpZiAoIXRva2VuKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1Rva2VuIG5vdCBmb3VuZCcpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IGlzVG9rZW5WYWxpZCA9IGF3YWl0IGZldGNoKGAke3VybH0vbWFydi11c2VyL2NoZWNrLXRva2VuYCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6ICdHRVQnLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBgQmVhcmVyICR7dG9rZW59YCxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBpZiAoaXNUb2tlblZhbGlkLnN0YXR1cyA9PT0gNDAzKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ludmFsaWQgb3IgZXhwaXJlZCB0b2tlbi4gUmVtb3ZpbmcgdG9rZW4uLi4nKTtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndG9rZW4nKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGlzVG9rZW5WYWxpZC5zdGF0dXMgPT09IDIwMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgaXNUb2tlblZhbGlkLmpzb24oKTtcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGR1cmluZyB0b2tlbiB2YWxpZGF0aW9uOicsIGVycm9yKTtcclxuICAgIH1cclxufTtcclxuIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX1VSTCIsImdldFRva2VuIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsImNoZWNrVG9rZW4iLCJ0b2tlbiIsImNvbnNvbGUiLCJsb2ciLCJpc1Rva2VuVmFsaWQiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJzdGF0dXMiLCJlcnJvciIsInJlbW92ZUl0ZW0iLCJqc29uIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/Windows/Auth.js\n"));

/***/ })

});